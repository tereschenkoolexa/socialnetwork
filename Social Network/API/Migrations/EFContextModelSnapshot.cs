// <auto-generated />
using API.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(EFContext))]
    partial class EFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Entities.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("API.Entities.ChatUser", b =>
                {
                    b.Property<int>("IdChat");

                    b.Property<int>("IdUser");

                    b.HasKey("IdChat", "IdUser");

                    b.HasIndex("IdUser");

                    b.ToTable("ChatUsers");
                });

            modelBuilder.Entity("API.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Context");

                    b.Property<int>("IdChat");

                    b.Property<int>("IdUser");

                    b.HasKey("Id");

                    b.HasIndex("IdChat");

                    b.HasIndex("IdUser");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("API.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Gmail");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Entities.Wall", b =>
                {
                    b.Property<int>("IdUser");

                    b.Property<int>("Age");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("ImageAvatar");

                    b.Property<string>("Status");

                    b.HasKey("IdUser");

                    b.ToTable("Walls");
                });

            modelBuilder.Entity("API.Entities.ChatUser", b =>
                {
                    b.HasOne("API.Entities.Chat", "ChatOf")
                        .WithMany("ChatUsers")
                        .HasForeignKey("IdChat")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("API.Entities.User", "UserOf")
                        .WithMany("ChatUsers")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("API.Entities.Message", b =>
                {
                    b.HasOne("API.Entities.Chat", "ChatOf")
                        .WithMany()
                        .HasForeignKey("IdChat")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("API.Entities.User", "UserOf")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("API.Entities.Wall", b =>
                {
                    b.HasOne("API.Entities.User", "UserOf")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
